exception:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace stacks
{
    class MyStack
    {
        private int[] ele;
        private int top;
        private int max;

        public MyStack(int size)
        {
            ele = new int[size];
            top = -1;
            max = size;
        }
        public void push(int item)
        {
            try
            {
                ele[++top] = item;
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
        }

        public int pop()
        {
            Console.WriteLine("popped element is :" + ele[top]);
            return ele[top--];
        }
        public void printstack()
        {
            if (top == -1)
            {
                Console.WriteLine("stack is empty");
                return;
            }
            else
            {
                for (int i = 0; i <= top; i++)
                {
                    Console.WriteLine("item[" + (i + 1) + "] :" + ele[i]);
                }
            }
        }
    }

    class program
    {
        static void main()
        {
            StackException se = new StackException();
            se.Method();
            Console.ReadLine();
        }
    }
    class StackException
    {
        public void Method()
        {
            MyStack s = new MyStack(5);
            s.push(10);
            s.push(20);
            s.push(30);
            s.push(40);
            s.push(50);
            Console.WriteLine("item are:");
            s.printstack();
            s.pop();
            s.push(50);
            s.push(60);
        }
    }
}
collectionframework:
using System;
using System.Collections;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace IEnumerableExample
{
    class Player
    {
        public string Name { get; set;  }
        public int Run { get; set; }
        public Player(string name, int run)
        {
            Name = name;
            Run = run;
        }
    }
    class Team : IEnumerable
    {
        private Player[] playerArray = new Player[4];
        public Team()
        {
            playerArray[0] = new Player("Virat", 28);
            playerArray[1] = new Player("Dhoni", 35);
            playerArray[2] = new Player("Rohit", 29);
            playerArray[3] = new Player("yuraj", 34);
        }
        public IEnumerator GetEnumerator()
        {
            foreach (Player player in playerArray)
            {
                console.WriteLine("Name is{0} and Run is {1}", player.Name, player.Run);
            }
            return playerArray.GetEnumerator();
        }
    }
    internal class Program
    {
        public static void Main(string[] args)
        {
            Team India = new Team();
            India.GetEnumerator();
            Console.ReadLine();
        }
    }
        
}
2:
using System;
using System.Collections;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace CSharpAssignments
{
    public class EmployeeManagementApplication
    { 
   
        public static void main()
        {
             emp1 = new Employee();
            Employee emp2 = new Employee();
            Employee emp3 = new Employee();

            emp1.setEmpDetails(1, "tulasi", 5000);
            emp1.setEmpDetails(2, "rahul", 50000);
            emp1.setEmpDetails(3, "virat", 58000);

            ArrayList myList = new ArrayList();
            myList.Add(emp1);
            myList.Add(emp2);
            myList.Add(emp3);
            Console.WriteLine("displaying employee details from employee arraylist /n");
            foreach (Employee employee in myList)
            {
                Console.WriteLine($"salary :{employee._salary}");
            }
        }
    }
}
