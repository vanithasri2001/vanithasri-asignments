using System;
using System.collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace Delegates
{
public delegate void EmployeeDelegate();
public class MultiCastDelegate
{
static Void Main(string[] args)
{


EmployeeDelagate empdel1 = new EmployeeDelegate(kilometerTravel);
EmployeeDelegate empdel2 = new EmployeeDelegate(tourallowance);
EmployeeDelegate empdel3 = new EmployeeDelegate(Telephoneallowance);
EmployeeDelegate empdel4 = new EmployeeDelegate(details);
EmployeeDelegate empdel5 = empdel1 + empdel2 + empdel3 + empdel4;
empdel5();

}
public static void kilometerTravel()
{
int kt = 2;
Console.WriteLine("Kilometertravel: {0}",kt);
}
public static void Tourallowance()
}
public static void KilometerTravel()
{
int kt = 2;
Console.WriteLine("Kilometer: {0}", kt);
}
public static void Tourallowance()
{
int kt = 2;
int ta = (int)kt * 5;
Console.WriteLine("Tourallowance:{0}", ta);
}
public static void Telephoneallowance()
{
int tpa = 1000;
Console.WriteLine("Telephone Allowance:{0}, tpa);
}
public static void details()
{
int ID = 1;
string name = "Rasna"
intsalary =20000;
Console.WriteLine("Marketingexecutive ID:{0}", ID);
Console.WriteLine("MarketingExecutive Name:{0}, name);
Console.WriteLine("MarketingExecutive salary:{0}, salary);
}
}
using System;
namespace Bank
{
    class BankAccount
    {
        public double AccountNumber = 12345678;
        public String Name = "Indra";
        public double bankbalance = 133333434;
        public void data()
        {
            Console.WriteLine("Accountnumber={0}\nAccountHolder={1}\nBankbalace={2}",AccountNumber,Name,bankbalance);
        }
        public void deposit(double money)
        {
            if (money > 0)
            {
                bankbalance = bankbalance + money;
                Console.WriteLine("Bank Balance=" + bankbalance);

           }
            else
            {
                Console.WriteLine("enter correct value of amount");

            }
            Console.WriteLine("Bank Balance=" + bankbalance);
        }
        public void withdraw(double amount)
        {
            if (amount < bankbalance)
            {
                bankbalance -= amount;
            }
            else if (amount > bankbalance)
            {
                Console.WriteLine("Insufficient Balance");
            }
            else
            {
                Console.WriteLine("select correct choice");
            }
            Console.WriteLine("Bank Balance=" + bankbalance);



        }
        public void balance()
        {
            Console.WriteLine("bank balance=" + bankbalance);
        }


            
    }
    class ICICIBankAccount : BankAccount
    {
        public void withdraw(double amount)
        {
            if (amount < bankbalance)
            {
                bankbalance -= amount;
            }
            
              
            

        }
    }
files IO
namespace FileIO
{
    public class program
    {
        public static void Main()
        {
            try
            {
                string path = @"C:\Users\VANITHASREE\Source\Repos\FileIO\FileIO";
                string[] files = Directory.GetFiles(path);
                string[] directories = Directory.GetDirectories(path);
                Console.WriteLine($"Files in{path}\n");
                foreach (string file in files)
                {
                    string filesName = Path.GetFileName(file);
                    Console.WriteLine(filesName);
                    string filepath = Path.Combine(path, filesName);
                    FileInfo myfile=new FileInfo(filepath);
                    //OPEINING fike to read
                    StreamReader sr =myfile.OpenText();
                    string data = "";
                    while((data = sr.ReadLine()) != null)
                    {
                        Console.WriteLine(data);    
                    }
                    Console.WriteLine("\n");
                   
                }
                Console.WriteLine($"subdirectories inside{path}\n");
                foreach(string directory in directories)
                {
                    DirectoryInfo directoryinfo = new DirectoryInfo(directory);
                    directoryinfo.GetDirectories();
                    string directoryName= directoryinfo.FullName;   
                    Console.WriteLine(directoryName);
                }
            }
            catch (IOException e)
            {
                Console.WriteLine(e);           
            }
           
        }


    }
}